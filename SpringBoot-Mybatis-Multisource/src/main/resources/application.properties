##Spring表数据库配置
spring.datasource.spring.url=jdbc:mysql://127.0.0.1:3306/spring?useUnicode=true&characterEncoding=UTF-8&useSSL=true&serverTimezone=UTC
spring.datasource.spring.username=root
spring.datasource.spring.password=root
# 初始化大小，最小，最大
spring.datasource.spring.initialSize=10
spring.datasource.spring.minIdle=20
spring.datasource.spring.maxActive=100
## 配置获取连接等待超时的时间
spring.datasource.spring.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.spring.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.spring.minEvictableIdleTimeMillis=300000
spring.datasource.spring.testWhileIdle=true
spring.datasource.spring.testOnBorrow=false
spring.datasource.spring.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.spring.poolPreparedStatements=true
spring.datasource.spring.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.spring.filters=stat,slf4j,wall
#------------------------------ 分隔符-------------------------------------
##test表数据库配置
spring.datasource.test.url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=UTF-8&useSSL=true&serverTimezone=UTC
spring.datasource.test.username=root
spring.datasource.test.password=root
# 初始化大小，最小，最大
spring.datasource.test.initialSize=10
spring.datasource.test.minIdle=20
spring.datasource.test.maxActive=100
## 配置获取连接等待超时的时间
spring.datasource.test.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.test.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.test.minEvictableIdleTimeMillis=300000
spring.datasource.test.testWhileIdle=true
spring.datasource.test.testOnBorrow=false
spring.datasource.test.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.test.poolPreparedStatements=true
spring.datasource.test.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.test.filters=stat,slf4j,wall